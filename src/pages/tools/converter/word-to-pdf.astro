---
import ToolLayout from '@/layouts/ToolLayout.astro';

const faqs = [
  {
    question: 'How to convert Word documents to PDF without uploading files?',
    answer: 'Our Word to PDF converter uses modern web technologies to process documents entirely in your browser. Your files never leave your device, ensuring complete privacy and security. The conversion happens locally using JavaScript libraries.'
  },
  {
    question: 'What Word document formats are supported?',
    answer: 'Our converter supports modern Word formats including .docx files. For older .doc formats, we recommend first opening the file in Microsoft Word and saving it as .docx format for best compatibility.'
  },
  {
    question: 'Will the formatting be preserved in the PDF?',
    answer: 'Yes, our converter maintains most formatting including fonts, styles, images, tables, and layouts. However, some advanced features like macros, embedded objects, or complex formatting may not be perfectly preserved.'
  },
  {
    question: 'Is there a file size limit for conversion?',
    answer: 'The converter can handle most standard documents, but performance depends on your device\'s memory and processing power. Very large documents (over 100MB) or those with many images may take longer to process.'
  },
  {
    question: 'Can I convert password-protected Word documents?',
    answer: 'Currently, our converter does not support password-protected Word documents. Please remove the password protection in Microsoft Word first, then use our converter.'
  }
];
---

<ToolLayout
  title="Word to PDF Converter - Convert DOCX to PDF Online Free"
  description="Convert Microsoft Word documents to PDF format privately in your browser. No file upload required - secure, fast, and completely free DOCX to PDF conversion."
  toolName="Word to PDF Converter"
  category="File Conversion"
  faqs={faqs}
>
  <div class="bg-white p-6 rounded-lg shadow-md">
    <div class="space-y-6">
      <!-- File Upload Area -->
      <div class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-blue-400 transition-colors" id="drop-zone">
        <div class="space-y-4">
          <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
            <path d="M9 12h6m6 0h6m-6 4h6m2 5H7a2 2 0 01-2-2V8a2 2 0 012-2h10l4 4h4a2 2 0 012 2v6a2 2 0 01-2 2z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
          </svg>
          <div>
            <label for="file-input" class="cursor-pointer">
              <span class="text-blue-600 font-medium hover:text-blue-500">Click to select Word documents</span>
              <span class="text-gray-500"> or drag and drop</span>
            </label>
            <input id="file-input" type="file" accept=".docx" multiple class="hidden">
          </div>
          <p class="text-sm text-gray-500">DOCX files only • No file size limit • Completely private</p>
        </div>
      </div>
      
      <!-- Conversion Settings -->
      <div id="settings-panel" class="hidden space-y-6">
        <h3 class="text-lg font-semibold text-gray-900">Conversion Settings</h3>
        
        <div class="grid md:grid-cols-2 gap-6">
          <div>
            <label for="page-orientation" class="block text-sm font-medium text-gray-700 mb-2">Page Orientation</label>
            <select id="page-orientation" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="auto">Auto (from document)</option>
              <option value="portrait">Portrait</option>
              <option value="landscape">Landscape</option>
            </select>
          </div>
          
          <div>
            <label for="page-size" class="block text-sm font-medium text-gray-700 mb-2">Page Size</label>
            <select id="page-size" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="auto">Auto (from document)</option>
              <option value="a4">A4</option>
              <option value="letter">Letter</option>
              <option value="legal">Legal</option>
            </select>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <label class="flex items-center">
            <input type="checkbox" id="preserve-links" checked class="mr-2">
            <span class="text-sm">Preserve hyperlinks</span>
          </label>
          <label class="flex items-center">
            <input type="checkbox" id="preserve-bookmarks" checked class="mr-2">
            <span class="text-sm">Preserve bookmarks</span>
          </label>
        </div>
        
        <div class="flex gap-4">
          <button id="convert-btn" class="flex-1 bg-blue-600 text-white py-3 px-6 rounded-md hover:bg-blue-700 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed">
            Convert to PDF
          </button>
          <button id="reset-btn" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors">
            Reset
          </button>
        </div>
      </div>
      
      <!-- Progress -->
      <div id="progress-panel" class="hidden">
        <div class="bg-blue-50 p-4 rounded-lg">
          <div class="flex items-center space-x-3">
            <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"></div>
            <span class="text-blue-800">Converting documents to PDF...</span>
          </div>
          <div class="mt-2 w-full bg-blue-200 rounded-full h-2">
            <div id="progress-bar" class="bg-blue-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
          </div>
        </div>
      </div>
      
      <!-- Results -->
      <div id="results-panel" class="hidden space-y-6">
        <h3 class="text-lg font-semibold text-gray-900">Conversion Results</h3>
        
        <div id="results-container" class="space-y-4">
          <!-- Results will be populated here -->
        </div>
      </div>
      
      <!-- Feature Notice -->
      <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
        <div class="flex items-start">
          <svg class="flex-shrink-0 w-5 h-5 text-yellow-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
          </svg>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-yellow-800">Development Note</h3>
            <div class="mt-2 text-sm text-yellow-700">
              <p>This Word to PDF converter is currently in development and requires additional JavaScript libraries for full functionality. The interface is ready, but the actual conversion requires integration with libraries like pdf-lib or mammoth.js.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div slot="instructions">
    <ol class="space-y-3 text-gray-600">
      <li>1. Select one or more Word documents (.docx format)</li>
      <li>2. Choose your preferred page orientation and size</li>
      <li>3. Select options for preserving links and bookmarks</li>
      <li>4. Click "Convert to PDF" to start processing</li>
      <li>5. Download your converted PDF files</li>
      <li>6. All processing happens locally - no files uploaded!</li>
    </ol>
  </div>
</ToolLayout>

<script>
  let selectedFiles: File[] = [];
  
  // Elements
  const fileInput = document.getElementById('file-input') as HTMLInputElement;
  const dropZone = document.getElementById('drop-zone') as HTMLElement;
  const settingsPanel = document.getElementById('settings-panel') as HTMLElement;
  const progressPanel = document.getElementById('progress-panel') as HTMLElement;
  const resultsPanel = document.getElementById('results-panel') as HTMLElement;
  const convertBtn = document.getElementById('convert-btn') as HTMLButtonElement;
  const resetBtn = document.getElementById('reset-btn') as HTMLButtonElement;
  const resultsContainer = document.getElementById('results-container') as HTMLElement;
  const progressBar = document.getElementById('progress-bar') as HTMLElement;

  // Event listeners
  fileInput.addEventListener('change', handleFileSelection);
  dropZone.addEventListener('dragover', handleDragOver);
  dropZone.addEventListener('drop', handleFileDrop);
  convertBtn.addEventListener('click', convertDocuments);
  resetBtn.addEventListener('click', resetConverter);

  function handleFileSelection(e: Event) {
    const target = e.target as HTMLInputElement;
    selectedFiles = Array.from(target.files || []).filter(file => 
      file.name.toLowerCase().endsWith('.docx')
    );
    if (selectedFiles.length > 0) {
      showSettings();
    } else {
      alert('Please select DOCX files only.');
    }
  }

  function handleDragOver(e: DragEvent) {
    e.preventDefault();
    dropZone.classList.add('border-blue-400', 'bg-blue-50');
  }

  function handleFileDrop(e: DragEvent) {
    e.preventDefault();
    dropZone.classList.remove('border-blue-400', 'bg-blue-50');
    
    const files = Array.from(e.dataTransfer?.files || []).filter(file => 
      file.name.toLowerCase().endsWith('.docx')
    );
    if (files.length > 0) {
      selectedFiles = files;
      showSettings();
    } else {
      alert('Please select DOCX files only.');
    }
  }

  function showSettings() {
    settingsPanel.classList.remove('hidden');
    convertBtn.textContent = `Convert ${selectedFiles.length} document${selectedFiles.length > 1 ? 's' : ''} to PDF`;
  }

  async function convertDocuments() {
    if (selectedFiles.length === 0) return;

    // Show progress
    progressPanel.classList.remove('hidden');
    resultsPanel.classList.add('hidden');
    resultsContainer.innerHTML = '';

    // Get settings
    const settings = {
      orientation: (document.getElementById('page-orientation') as HTMLSelectElement).value,
      pageSize: (document.getElementById('page-size') as HTMLSelectElement).value,
      preserveLinks: (document.getElementById('preserve-links') as HTMLInputElement).checked,
      preserveBookmarks: (document.getElementById('preserve-bookmarks') as HTMLInputElement).checked
    };

    try {
      // Note: This is a placeholder implementation
      // In a real implementation, you would use libraries like:
      // - mammoth.js for reading DOCX files
      // - pdf-lib or jsPDF for creating PDFs
      
      const results = [];
      
      for (let i = 0; i < selectedFiles.length; i++) {
        const file = selectedFiles[i];
        
        // Simulate conversion process
        await simulateConversion(file, settings);
        
        results.push({
          originalFile: file,
          fileName: file.name.replace('.docx', '.pdf'),
          success: false, // Set to false since this is a demo
          message: 'Conversion requires additional libraries (mammoth.js, pdf-lib)'
        });
        
        // Update progress
        const progress = ((i + 1) / selectedFiles.length) * 100;
        progressBar.style.width = `${progress}%`;
      }

      // Hide progress and show results
      progressPanel.classList.add('hidden');
      displayResults(results);
      
    } catch (error) {
      progressPanel.classList.add('hidden');
      alert('Error converting documents: ' + error.message);
    }
  }

  async function simulateConversion(file: File, settings: any) {
    // Simulate processing time
    return new Promise(resolve => {
      setTimeout(resolve, 1000 + Math.random() * 2000);
    });
  }

  function displayResults(results) {
    resultsPanel.classList.remove('hidden');

    results.forEach((result, index) => {
      const resultDiv = document.createElement('div');
      resultDiv.className = 'bg-gray-50 p-4 rounded-lg';

      if (result.success) {
        resultDiv.innerHTML = `
          <div class="flex items-center justify-between">
            <div>
              <h4 class="font-medium text-gray-900">${result.fileName}</h4>
              <p class="text-sm text-green-600">✓ Converted successfully</p>
            </div>
            <button onclick="downloadFile('${index}')" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors">
              Download PDF
            </button>
          </div>
        `;
      } else {
        resultDiv.innerHTML = `
          <div class="flex items-start space-x-3">
            <svg class="flex-shrink-0 w-5 h-5 text-red-400 mt-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
            </svg>
            <div>
              <h4 class="font-medium text-gray-900">${result.originalFile.name}</h4>
              <p class="text-sm text-red-600">Conversion not available</p>
              <p class="text-sm text-gray-500 mt-1">${result.message}</p>
            </div>
          </div>
        `;
      }

      resultsContainer.appendChild(resultDiv);
    });

    // Add implementation note
    const noteDiv = document.createElement('div');
    noteDiv.className = 'bg-blue-50 border border-blue-200 rounded-lg p-4 mt-4';
    noteDiv.innerHTML = `
      <div class="flex items-start">
        <svg class="flex-shrink-0 w-5 h-5 text-blue-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>
        </svg>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-blue-800">Implementation Required</h3>
          <p class="mt-1 text-sm text-blue-700">
            To enable Word to PDF conversion, integrate libraries like <code>mammoth.js</code> for reading DOCX files and <code>pdf-lib</code> or <code>jsPDF</code> for generating PDFs. This would provide fully client-side document conversion.
          </p>
        </div>
      </div>
    `;
    resultsContainer.appendChild(noteDiv);
  }

  function resetConverter() {
    selectedFiles = [];
    fileInput.value = '';
    settingsPanel.classList.add('hidden');
    resultsPanel.classList.add('hidden');
    progressPanel.classList.add('hidden');
    resultsContainer.innerHTML = '';
    progressBar.style.width = '0%';
  }

  function formatFileSize(bytes: number) {
    if (bytes === 0) return '0 Bytes';
    const k = 1024;
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  }
</script>
