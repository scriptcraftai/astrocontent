---
export interface Props {
  questions: Array<{ question: string; answer: string }>;
}

const { questions } = Astro.props;
---

<div class="bg-white p-6 rounded-lg shadow-md">
  <h2 class="text-xl font-semibold mb-4">Frequently Asked Questions</h2>
  
  <div class="space-y-4">
    {questions.map((faq, index) => (
      <details class="group border border-gray-200 rounded-lg">
        <summary class="flex justify-between items-center cursor-pointer p-4 hover:bg-gray-50 transition-colors">
          <h3 class="font-medium text-gray-900">{faq.question}</h3>
          <svg 
            class="w-5 h-5 text-gray-500 transition-transform group-open:rotate-180" 
            fill="currentColor" 
            viewBox="0 0 20 20"
          >
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
          </svg>
        </summary>
        <div class="p-4 border-t border-gray-200">
          <p class="text-gray-600" set:html={faq.answer}></p>
        </div>
      </details>
    ))}
  </div>
</div>

<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": questions.map(faq => ({
    "@type": "Question",
    "name": faq.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": faq.answer.replace(/<[^>]*>/g, '')
    }
  }))
})}></script>
